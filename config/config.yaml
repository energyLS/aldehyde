cluster: "remote:path/on/remote"

# Path to the PyPSA-Earth-Sec repository
pypsaearthsec: "/mnt/c/Users/scl38887/Documents/git/pypsa-earth-sec/config.default.yaml"

retrieve_cost_data: False
import_pypsaearthsec: True # Set true to run PyPSA-Earth-Sec subworkflow

climate_targets:
  2030_cond: 115 # in Mt CO2 (equ.?)
  2030_uncond: 75 # in Mt CO2 (equ.?)

co2base: 40e6 # 100 Mt CO2 TODO this must be set manually in the pypsa-earth-sec config.pypsa-earth.yaml, here it ist just a doc

scenario:
  simpl: # only relevant for PyPSA-Eur
  - ""
  clusters: # number of nodes in Europe, any integer between 37 (1 node per country-zone) and several hundred
  - 4
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  ll:
  - "c1.0"
  opts: ["Co2L1.0","Co2L.50","Co2L0.10"] #["Co2L1.0", "Co2L0.90", "Co2L0.80", "Co2L0.70", "Co2L0.60", "Co2L.50", "Co2L0.40", "Co2L0.30", "Co2L0.20", "Co2L0.10"]
  sopts: "6H"
  demand:
  - "DF"

export:
  h2export: [0,20,40,120] #[0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200] # Yearly export demand in TWh. TODO This is currently necessary for PyPSA-Earth-Sec subworkflow

# Select which networks to compare in terms of integrated/islanded
compare_networks:
  simpl: # only relevant for PyPSA-Eur
  - ""
  clusters: # number of nodes in Europe, any integer between 37 (1 node per country-zone) and several hundred
  - 4
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  ll:
  - "c1.0"
  opts: 
  - "Co2L0.90"
  sopts: ["144H"]
  discountrate: [0.071]
  demand:
  - "DF"
  h2export: [20]

# regulate what components are in the export only scenario
pypsa_earth:
  Line:
    - AC
  Bus:
    - AC
    - H2
    - DC
  Link:
    - DC
    - H2
    - H2 Electrolysis
  Generator:
    - onwind
    - offwind-ac
    - offwind-dc
    - solar
    - ror
  StorageUnit: []
  Store: 
    - H2
  Load: 
    - H2
 # Global_Constraint: []

costs_pypsaearthsec:
  discountrate: [0.071] #, 0.086, 0.111]

costs:
  year: 2030
  version: v0.4.0
  rooftop_share: 0.14  # based on the potentials, assuming  (0.1 kW/m2 and 10 m2/person)
  fill_values:
    FOM: 0
    VOM: 0
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
    "CO2 intensity": 0
    "discount rate": 0.07
  marginal_cost:
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.

# this information is NOT used but needed as an argument for
# aldehyde/workflow/scripts/helpers.py/load_costs 
electricity:
  max_hours:
    battery: 6
    H2: 168


plot:
  contour_plot:
    type: ["cost", "lcoh", "lcoh_marginal", "lcoh_marginal_export", "lcoh_marginal_weighted", "lcoe_marginal"]
    levels: [10]
    zerofilter: True # Filter out zero values of export and co2 reduction wildcards for plotting
    label:
      cost: "Total System Cost in B€"
      lcoh: "LCOH (base) in €/MWh"
      lcoh_marginal: "LCOH (marginal) in €/MWh"
      lcoh_marginal_export: "LCOH (marginal export) in €/MWh"
      lcoh_marginal_weighted: "LCOH (marginal weighted) in €/MWh"
      lcoe_marginal: "LCOE (marginal) in €/MWh"
  
  spatial_plot:
    type: ["p-nom-opt","p-nom-max","land-use"]

