cluster: "remote:path/on/remote"

# Path to the PyPSA-Earth-Sec repository
pypsaearthsec: "/mnt/c/Users/scl38887/Documents/git/pypsa-earth-sec/config.default.yaml"

retrieve_cost_data: False
import_pypsaearthsec: False # Set true to run PyPSA-Earth-Sec subworkflow

climate_targets:
  2030_cond: 115 # in Mt CO2 (equ.?)
  2030_uncond: 75 # in Mt CO2 (equ.?)

co2base: 72e6 # 100 Mt CO2 TODO this must be set manually in the pypsa-earth-sec config.pypsa-earth.yaml, here it ist just a doc

scenario:
  simpl: # only relevant for PyPSA-Eur
  - ""
  clusters: # number of nodes in Europe, any integer between 37 (1 node per country-zone) and several hundred
  - 4
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  ll:
  - "c3.0"
  opts: ["Co2L2.0", "Co2L0.90", "Co2L0.80", "Co2L0.70", "Co2L0.60", "Co2L0.50", "Co2L0.40", "Co2L0.30", "Co2L0.20", "Co2L0.10", "Co2L0.00"]
  # "Co2L0.80", "Co2L0.70", "Co2L0.60", "Co2L.50", "Co2L0.40", "Co2L0.30", "Co2L0.20", "Co2L0.10"]
  sopts: "3H"
  demand:
  - "DF"

export:
  h2export: [0, 20, 40, 60, 80, 100, 120, 140, 160, 180, 200] # Yearly export demand in TWh. TODO This is currently necessary for PyPSA-Earth-Sec subworkflow

# Select which networks to compare in terms of integrated/islanded
compare_networks:
  simpl: # only relevant for PyPSA-Eur
  - ""
  clusters: # number of nodes in Europe, any integer between 37 (1 node per country-zone) and several hundred
  - 4
  planning_horizons: # investment years for myopic and perfect; or costs year for overnight
  - 2030
  ll:
  - "c1.0"
  opts: 
  - "Co2L0.90"
  sopts: ["144H"]
  discountrate: [0.015]
  demand:
  - "DF"
  h2export: [20]

# regulate what components are in the export only scenario
pypsa_earth:
  Line:
    - AC
  Bus:
    - AC
    - H2
    #- DC
    - battery
  Link:
    #- DC
    - H2
    - H2 Electrolysis
    - battery charger
    - battery discharger
  Generator:
    - onwind
    - offwind-ac
    - offwind-dc
    - solar
    - ror
  StorageUnit: []
  Store: 
    - H2
    - battery
  Load: 
    - H2
 # Global_Constraint: []

costs_pypsaearthsec:
  discountrate: [0.15] #[0.071] #, 0.086, 0.111]

costs:
  year: 2030
  version: v0.4.0
  rooftop_share: 0.14  # based on the potentials, assuming  (0.1 kW/m2 and 10 m2/person)
  fill_values:
    FOM: 0
    VOM: 0
    efficiency: 1
    fuel: 0
    investment: 0
    lifetime: 25
    "CO2 intensity": 0
    "discount rate": 0.07
  marginal_cost:
    solar: 0.01
    onwind: 0.015
    offwind: 0.015
    hydro: 0.
    H2: 0.
    electrolysis: 0.
    fuel cell: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 0.

# this information is NOT used but needed as an argument for
# aldehyde/workflow/scripts/helpers.py/load_costs 
electricity:
  max_hours:
    battery: 6
    H2: 168

plot:
  contour_plot:
    type: ["lcoe_w"]
     #["cost", "H2_GWh", "Battery_GWh", "H2export_GWh", "ratio_H2_Battery", "curtailmentrate_solar", "curtailmentrate_wind", "loce_w_electrolysis", "lcoe_w_no_electrolysis"] #["cost", "lcoh_system", "lcoh_notw_export", "lcoh_notw_noexport", "lcoh_notw_mixed", "lcoe_notw", "lcoh_w_export", "lcoh_w_noexport", "lcoh_w_mixed", "lcoe_w", "H2_GWh", "Battery_GWh", "H2export_GWh", "ratio_H2_Battery", "curtailmentrate_solar", "curtailmentrate_wind"]
    levels: [20]
    show_minimums: True
    zerofilter: False # Filter out zero values of export and co2 reduction wildcards for plotting
    label:
      cost: "Total System Cost in B€"
      lcoh_system: "LCOH (system comp.) in €/MWh"
      lcoh_notw_export: "Marginal price of hydrogen (export node) in €/MWh"
      lcoh_notw_noexport: "Marginal price of hydrogen (non-export nodes) in €/MWh"
      lcoh_notw_mixed: "Marginal price of hydrogen (all hydrogen nodes) in €/MWh"
      lcoe_notw: "Marginal price of electricity in €/MWh"
      lcoh_w_export: "Weighted marginal price of hydrogen (export node) in €/MWh"
      lcoh_w_noexport: "Weighted marginal price of hydrogen (non-export nodes) in €/MWh"
      lcoh_w_mixed: "Weighted marginal price of hydrogen (all hydrogen nodes) in €/MWh"
      lcoe_w: "Weighted marginal price of electricity in €/MWh"
      lcoe_w_electrolysis: "Weighted (electrolysis) marginal price of electricity in €/MWh"
      lcoe_w_no_electrolysis: "Weighted (no electrolysis) marginal price of electricity in €/MWh"
      H2_GWh: "Hydrogen storage capacity (non-export nodes) in GWh"
      Battery_GWh: "Battery storage capacity in GWh"
      H2export_GWh: "Hydrogen storage capacity (export node) in GWh"
      ratio_H2_Battery: "Ratio of hydrogen to battery storage capacity"
      curtailmentrate_solar: "Curtailment rate of solar in %"
      curtailmentrate_wind: "Curtailment rate of wind in %"
      cf_electrolysis: "Capacity factor of electrolysis in %"
      pv_capex: "Solar PV CAPEX in Mio. €"
      pv_p_nom_opt: "Solar PV capacity in GW"
      onshore_capex: "Onshore wind CAPEX in Mio. €"
      onshore_p_nom_opt: "Onshore wind capacity in GW"
      coal_capex: "Coal CAPEX in Mio. €"
      coal_p_nom_opt: "Coal capacity in GW"
      ccgt_capex: "CCGT CAPEX in Mio. €"
      ccgt_p_nom_opt: "CCGT capacity in GW"
      ror_capex: "Run-of-river CAPEX in Mio. €"
      ror_p_nom_opt: "Run-of-river capacity in GW"
      oil_capex: "Oil CAPEX in Mio. €"
      oil_p_nom_opt: "Oil capacity in GW"
      ocgt_capex: "OCGT CAPEX in Mio. €"
      ocgt_p_nom_opt: "OCGT capacity in GW"
      pv_supply: "Solar PV supply in TWh"
      pv_cf: "Solar PV capacity factor in %"
      onshore_supply: "Onshore wind supply in TWh"
      onshore_cf: "Onshore wind capacity factor in %"
      coal_supply: "Coal supply in TWh"
      coal_cf: "Coal capacity factor in %"
      ccgt_supply: "CCGT supply in TWh"
      ccgt_cf: "CCGT capacity factor in %"
      ror_supply: "Run-of-river supply in TWh"
      ror_cf: "Run-of-river capacity factor in %"
      oil_supply: "Oil supply in TWh"
      oil_cf: "Oil capacity factor in %"
      ocgt_supply: "OCGT supply in TWh"
      ocgt_cf: "OCGT capacity factor in %"

  spatial_plot:
    type: ["land-use"] #["p-nom-opt","p-nom-max","land-use"]
    h2export:  [120, 800] #[0, 20, 40, 120]
    opts: ["Co2L0.10"] #["Co2L1.0","Co2L.50","Co2L0.10"]

